<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="EquipmentModule" Id="{f2e656c0-93da-44d4-9459-07fffe962a19}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EquipmentModule EXTENDS FB_PackML_BaseModule IMPLEMENTS ITF_Observer
VAR
	NextState		: BOOL;
	AbortReq		: BOOL;
	
	
	//ITF_Observable
	OModule : REFERENCE TO MachineModule;

	//
	interlock : Interlock;
	reqDoStuff: BOOL;
	stuffDone: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="CyclicLogic" Id="{a78de6c5-4a2b-4916-a597-ad8bb018c6f0}">
      <Declaration><![CDATA[METHOD PUBLIC CyclicLogic
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT _InitComplete THEN
	_InitComplete := Initialize();
	RETURN;
END_IF

//Check Interlock
IF reqDoStuff THEN
	reqDoStuff := FALSE;
	IF interlock.Unlocked THEN
		IF __ISVALIDREF(OModule) THEN
			OModule.Lock(THIS^); //Lock the interlock
		END_IF

		//OK to do stuff
	ELSE
		//Locked
		IF __ISVALIDREF(OModule) THEN
			TRACE(CONCAT(STR1 := 'Interlock set by: ', STR2 := TO_STRING(OModule.InterlockList)));
		END_IF
	END_IF
END_IF

//Release Interlock
IF stuffDone AND interlock.Locked THEN
	stuffDone := FALSE;
	IF __ISVALIDREF(OModule) THEN
		OModule.Unlock(THIS^);
	END_IF
END_IF

SUPER^.CyclicLogic();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Initialize" Id="{00c6170c-354e-46b1-b773-30d5828110ec}">
      <Declaration><![CDATA[METHOD PROTECTED Initialize : BOOL]]></Declaration>
      <Implementation>
        <ST><![CDATA[Initialize := TRUE;


]]></ST>
      </Implementation>
    </Method>
    <Method Name="updateConnection" Id="{2e52bece-f250-4467-b7ad-cd7fd7b9e6c1}">
      <Declaration><![CDATA[METHOD updateConnection
VAR_INPUT
	Module : REFERENCE TO MachineModule;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[OModule REF= Module;]]></ST>
      </Implementation>
    </Method>
    <Method Name="updateLock" Id="{e40c8d18-8c90-46d4-8156-7cc4a664175f}">
      <Declaration><![CDATA[METHOD updateLock
VAR_INPUT
	setLock : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Method called by observable to notify of lock status
IF setLock THEN
	interlock.Lock();
ELSE
	interlock.Unlock();
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="EquipmentModule">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="EquipmentModule.CyclicLogic">
      <LineId Id="87" Count="29" />
      <LineId Id="67" Count="0" />
    </LineIds>
    <LineIds Name="EquipmentModule.Initialize">
      <LineId Id="50" Count="0" />
      <LineId Id="72" Count="1" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="EquipmentModule.updateConnection">
      <LineId Id="38" Count="0" />
    </LineIds>
    <LineIds Name="EquipmentModule.updateLock">
      <LineId Id="15" Count="0" />
      <LineId Id="7" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>